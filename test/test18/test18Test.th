#include "cxxtest/TestSuite.h"

#include "test18/Message.h"
#include "test18/frame/TestFrame1.h"

class TestSuite : public CxxTest::TestSuite
{
public:
    void test1();

    using Interface =
        test18::Message<
            comms::option::IdInfoInterface,
            comms::option::ReadIterator<const std::uint8_t*>,
            comms::option::WriteIterator<std::uint8_t*>,
            comms::option::LengthInfoInterface,
            comms::option::ValidCheckInterface,
            comms::option::NameInterface,
            comms::option::RefreshInterface
        >;

    using Frame = test18::frame::TestFrame1<Interface>;
//    using Msg1 = test18::message::Msg1<Interface>;
};

void TestSuite::test1()
{
    Frame frame;
    static const std::uint8_t Buf[] = {1};
    static const std::size_t BufSize = std::extent<decltype(Buf)>::value;
    auto readIter = comms::readIteratorFor<Interface>(&Buf[0]);
    Frame::MsgPtr msgPtr;
    auto es = frame.read(msgPtr, readIter, BufSize);
    TS_ASSERT_EQUALS(es, comms::ErrorStatus::Success);
    TS_ASSERT(msgPtr);
    TS_ASSERT_EQUALS(msgPtr->getId(), test18::MsgId_M1);
//    TS_ASSERT(msg.valid());
}
