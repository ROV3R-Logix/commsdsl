#include <limits>

#include "CommonTestSuite.h"

class BitfieldTestSuite : public CommonTestSuite, public CxxTest::TestSuite
{
public:
    void setUp();
    void tearDown();
    void test1();
};

void BitfieldTestSuite::setUp()
{
    CommonTestSuite::commonSetUp();
}

void BitfieldTestSuite::tearDown()
{
    CommonTestSuite::commonTearDown();
}

void BitfieldTestSuite::test1()
{
    auto protocol = prepareProtocol(SCHEMAS_DIR "/Schema1.xml");
    TS_ASSERT(protocol);

    auto& namespaces = protocol->namespaces();
    TS_ASSERT_EQUALS(namespaces.size(), 1U);

    auto& ns = namespaces.front();
    TS_ASSERT(ns.name().empty());

    auto& fields = ns.fields();
    TS_ASSERT_EQUALS(fields.size(), 1U);

    auto& field = fields.front();
    TS_ASSERT_EQUALS(field.name(), "Bitfield1");
    TS_ASSERT(field.displayName().empty());
    TS_ASSERT(field.description().empty());
    TS_ASSERT_EQUALS(field.kind(), bbmp::Field::Kind::Bitfield);

    bbmp::BitfieldField bitfieldField(field);
    TS_ASSERT_EQUALS(bitfieldField.endian(), bbmp::Endian_Big);
    TS_ASSERT_EQUALS(bitfieldField.length(), 1U);
    TS_ASSERT_EQUALS(bitfieldField.bitLength(), bitfieldField.length() * 8U);
    auto& members = bitfieldField.members();
    TS_ASSERT_EQUALS(members.size(), 3U);
    auto& mem1 = members[0];
    auto& mem2 = members[1];
    auto& mem3 = members[2];
    TS_ASSERT_EQUALS(mem1.kind(), bbmp::Field::Kind::Enum);
    TS_ASSERT_EQUALS(mem2.kind(), bbmp::Field::Kind::Set);
    TS_ASSERT_EQUALS(mem3.kind(), bbmp::Field::Kind::Int);
}

